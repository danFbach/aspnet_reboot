@model IEnumerable<ASP_Reboot.Models.InventoryModels>
@using ASP_Reboot.Controllers

@{
    ViewBag.Title = "Index";
    string a_class = "";
}
<head>
    <meta http-equiv="content-type" content="initial-scale=1.0" />
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsXwyNRilLueuNc1WQg55_gwyiFlTiZE4&"
            type="text/javascript"></script>
    <style>
        #map {
            margin-left:20%;
            width:65%;
            height:300px;
        }
    </style>
</head>
<h2>Index</h2>

<p>
    <h4>@Html.ActionLink("Create New", "Create")</h4>
</p>
@using (Html.BeginForm("Index", "Inventory"))
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SKU)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.productName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.store_id)
            </th>
            <th></th>
        </tr>
        <div class="search-wrapper">
            <form>
                <input type="text" name="searchString" required class="search-box" placeholder="Search SKU#" />
            </form>
        </div>
        
        @foreach (var item in Model)
        {
            if (item.quantity >= 10)
            { a_class = "green"; }
            else if (item.quantity >= 5) { a_class = "amber"; }
            else if (item.quantity < 5) { a_class = "red"; }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SKU)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.productName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.price)
                </td>
                <td class="@a_class">
                    @Html.DisplayFor(modelItem => item.quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.store_id)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </table>

}
<div id="map">
    <script type="text/javascript">
        
        var locations = [
          ['Madison Super Organic Farm ', 43.084937, -89.390259, 4],
          ['Saylesville Farms', 43.299697, -88.438911, 5],
          ['Port Washington Super Organic Ultra Farm', 43.442528, -87.823098, 3],
          ['Cedarburg Farms', 43.31375, -88.005681, 2],
          ['Charles Ultra Organic House of Farmings', 42.876141, -88.313532, 1]
        ];

        var map = new google.maps.Map(document.getElementById('map'), {
            center: new google.maps.LatLng(42.876141, -88.313532),
            zoom: 8,
            mapTypeId: google.maps.MapTypeId.HYBRID
        });

        var infowindow = new google.maps.InfoWindow();

        var marker, i;


        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                }
            })(marker, i));
        }
    </script>
</div>